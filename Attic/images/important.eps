%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (images/important.eps)
%%CreationDate: (Mon Sep 18 12:30:38 2000)
%%BoundingBox: 0 0 23 23
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
%%BeginData:
DisplayImage
0 0
24 24
12
24 24
1
0
0
256
000000
080808
101010
181818
292929
393939
424231
424242
4a4a4a
525252
5a5a29
636318
636352
636363
6b6b42
6b6b6b
737352
7b7b7b
848484
8c8c18
8c8c39
8c8c7b
8c8c8c
94945a
94948c
949494
9c9c5a
9c9c63
9c9c7b
9c9c9c
a5a563
a5a584
a5a594
a5a59c
a5a5a5
adad21
adad39
adad6b
adad7b
adad84
adad8c
adada5
adadad
b5b54a
b5b552
b5b58c
b5b5b5
bdbd08
bdbd5a
bdbd84
bdbd9c
bdbdbd
c6c608
c6c65a
c6c6c6
cece73
cecece
d6d618
d6d652
d6d663
d6d66b
d6d6d6
dede00
dede21
dede31
dede39
dede52
dedede
e7e708
e7e721
e7e729
e7e731
e7e75a
e7e763
e7e77b
e7e7e7
efef00
efef10
efef31
efef42
efefef
f7f710
f7f718
f7f731
f7f739
f7f74a
f7f7f7
ffff00
ffff08
ffff10
ffff21
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
5b094b045b0f4b00360022001900220219002200380056005b0a5600330016001f004000
4d0432001c00160038005b084b0019001e00490057083a001a00220056005b0556001900
31004d00570a4d0026002e005b0456001900310057044c00140010003e0057051b002e00
5b03380025004d005704140000010a004d0057044d001e0043005b014b00210049005705
0d0000010500400057053a0029005b013800280057061200000109004e0057061c004b00
5b00220041005706230000010b0059005706280038004b0022004d0057062f0002000000
13005707440019004b0022004d00570639000400020024005707440019004b0022004d00
57063f00050002002b005707440019004b0022004d0057064600070003003b0057074400
19004b0022004d0057064f0016000f004a005707440022005b002e004000570647001400
1000390059005706280038005b003d001f005706110000010900470057054f0020004b00
5b00560021003a0057051000000106003f005704580030002e005b023d001e004d005704
3e000e000c002f0057053c00220050005b032200260057055a004e005706160038005b05
22001b004d00570958003c00120038005b0722001a0035004f0057064f002c0019003600
5b093d00220015002800440337001c0015002a004b005b0c4b0036001903220038004b00
5b06
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 23 23
%%EOF
