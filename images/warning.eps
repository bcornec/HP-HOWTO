%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (images/warning.eps)
%%CreationDate: (Mon Sep 18 12:30:39 2000)
%%BoundingBox: 0 0 23 23
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
%%BeginData:
DisplayImage
0 0
24 24
12
24 24
1
0
0
256
080000
100000
180000
210000
290000
310000
420000
4a0000
520000
5a0000
6b0000
730000
7b0000
840000
8c0000
940000
947b7b
9c5252
9c5a5a
9c7b7b
a50000
a53939
a54a4a
a58484
a59494
a5a5a5
ad0000
ad3131
ad9494
b50000
b52929
b58c8c
b59c9c
b5a5a5
b5b5b5
bd0000
bdadad
bdb5b5
c60000
c61010
c61818
c6c6c6
ce0000
ce1010
ce1818
ce2929
d60000
d62929
d6d6d6
de0000
dedede
e70000
e72121
e7e7e7
ef0000
ef0808
efefef
f70000
f7f7f7
ff0000
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
3c063200300838003c0b290011001e001b001e001b001e001b001e001b011c0038003c09
220016003700390828001c0038003c063800290015003700390a2800170038003c052900
12003700390c2800190038003c0322001500370039051d000f002e003905280017003800
3c01290016003700390523000400010009003700390528001c0038003200110037003906
0f00010104002e0039062800210030001b0039071a000200010006003100390637001000
30001e0039072600030000000800370039063700100030001b0039073100050001000b00
39073700100030001e0039073300070001000e0039073700100030001b00390808000100
140039073700100030001e0039080a0002001a0039073700100030001b00390823000d00
2e0039073700100030001e00390733000c0008001a0039073700100032001b0039071a00
01010600310039062d00180038002000280039061d00030001000700330039052f001300
32003c0038002000280039061d000d002a0039052f00170032003c0238001c002700390d
3400100032003c043a0022002700390b2f00100038003c0638001c00280039092f001700
32003c08380020002800370033003700330037003300370033002d00100032003c0a3a00
24001307180032003c05
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 23 23
%%EOF
